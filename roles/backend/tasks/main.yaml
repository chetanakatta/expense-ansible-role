- name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf: #dnf only works for Redhat family (homogeneous) 
       name: "{{ item }}"
       state: installed
    loop:
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user:
        name: expense

  - name: create app directory 
    ansible.builtin.file:
       path: /app
       state: directory

  - name: download backend code
    ansible.builtin.get_url:
       url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip  
       dest: /tmp/backend.zip

  - name: unzip backend code
    ansible.builtin.unarchive: #unarchive-->unzip ; archive-->zip
     src: /tmp/backend.zip   # by default checks in ansible server
     dest: /app
     remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args: # to go particular directory
       chdir: /app   

  - name: copy backend service
    ansible.builtin.template:
       src: backend.service.j2
       dest: /etc/systemd/system/backend.service

  - name: install python mysql dependencies
    ansible.builtin.pip:
       name:
       - PyMySQL
       - cryptography #for passwords it is necessary 
       executable: pip3.9 #ansible using python 3.9 if version changes like pip3.11 for python version 3.11   

  - name: import data into mysql
    community.mysql.mysql_db:
         login_user: "{{ login_user }}"  
         login_password: "{{ login_password }}"
         login_host: "{{ login_host }}"
         target: /app/schema/backend.sql
         state: import #we can use dump also but for that we need to install mysql dump
         name: all #to dump all the data

  - name: daemon reload
    ansible.builtin.systemd_service:
       daemon_reload: true

  - name: start and enable backend service
    ansible.builtin.service:
       name: backend
       state: started
       enabled: yes